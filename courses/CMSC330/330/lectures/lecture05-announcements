Lecture #5: week 3, lecture 2, Thursday September 13

1. Next Tuesday

   Larry will not be on campus next Monday or Tuesday, and will not be
   reading email.  There will be lecture, taught by someone else (probably a
   TA).  If you need to talk to hom about anything don't send him email
   those days; talk to him on Wednesday when he returns.

   His office hours next Monday will be cancelled.

   If any of you aren't going to be on campus on Tuesday be sure to arrange
   ahead of time to get notes from a classmate who's going to be in lecture.

2. Syllabus

   The syllabus is posted now, so read it carefully.  We're very sorry about
   the delay in making it available.

3. Webpage

   The webpage is set up and the lecture slides so far are there.  You need:

   ID:       330student
   password: opensesame

4. Ruby information

   As mentioned, besides the lecture slides, sources of Ruby information are
   linked to from the class webpage under "Information", so you can see
   those if you want info beyond the lecture slides.

5. Project #1

   It will be posted soon on the class webpage, so look for it.

6. Office hours

   Office hours will be starting soon, so look for them to be posted
   shortly.

7. Discussion section examples

   The examples from last Friday's discussion section are on the Grace
   machines in the directory

   /afs/glue/class/fall2012/cmsc/330/0101/public

   You can study them there.

8. Quiz #1

   As mentioned last lecture, Quiz #1 will be tomorrow in discussion.

9. Practice problems

   As mentioned last time, we put practice problems on the class webpage;
   these are in preparation for the quiz.  The solutions will also be
   posted, but don't just look at the questions and the answers- try to
   solve the problems yourself, or you won't get enough out of them.

   Other sources of info for preparation are the lecture slides, the
   resources about Ruby linked to from the class webpage, and studying the
   examples from discussion section.

10. Regular expression example (answer to question from lecture)

    Now that we covered more r.e. concepts I can go back and give a better
    illustration of the difference between /Ruby/ and /(Ruby)*/.

    /Ruby/ matches any string that contains "Ruby", including strings that
    contain "RubyRuby", "RubyRubyRuby", etc.

    /(Ruby)*/ matches any string that contains zero or more occurrences of
    "Ruby", including strings that contain "RubyRuby", "RubyRubyRuby", etc.

    Is there any difference?  Yes, /(Ruby)*/ will match the empty string,
    while the shortest string recognized by /Ruby/ is "Ruby".

    But when we use them in conjunction with other r.e. operations- even just
    concatenation of simple characters- they have more different effects.

    /XRubyY/ matches any string that contains just "XRubyY", for example
    "abcXRubyYpqr".

    /X(Ruby)*Y/ matches any string that contains X, followed by zero or more
    occurrences of "Ruby", followed by Y, such as "abcXRubyYpqr" or
    "abcXRubyRubyYpqr" or "abcXRubyRubyRubyYpqr".
