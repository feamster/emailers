\usepackage{fixltx2e}

%
% This semester (makes it easy to adjust materials for a different course or
% semester).
%
\newcommand{\semester}{fall}
\newcommand{\Semester}{Fall}
\newcommand{\thisyear}{2012}  % if \the\year is used, the year will change
                              % when recreating PS/PDF files in a later year
\newcommand{\term}{\semester\thisyear}
\newcommand{\Term}{\Semester\ \thisyear}
\newcommand{\course}{CMSC 330}

%
% Nicely define margins.
%

\usepackage[hmargin=.65in,vmargin=.65in,headsep=.2in,centering]{geometry}

%
% Needed for \header (3-part title) defined below.
%
\usepackage{tabularx}

\newcommand{\header}[3]{%
  \begin{center}%
    \LARGE%
    \begin{tabularx}{\linewidth}%
                    {@{}>{\hsize=.5\hsize}X@{}c@{}>{\hsize=.5\hsize}X@{}}%
      #1&\centering#2&\raggedleft#3%
    \end{tabularx}%
  \end{center}%
}

%
% Large parentheses to make reading some regular expressions easier.
%
\newcommand{\lpar}{\mbox{\Large \ensuremath{(}}}
\newcommand{\rpar}{\mbox{\Large \ensuremath{)}}}
\newcommand{\Lpar}{\mbox{\LARGE \ensuremath{(}}}
\newcommand{\Rpar}{\mbox{\LARGE \ensuremath{)}}}
\newcommand{\largeepsilon}{\mbox{\Large \ensuremath{\epsilon}}}

%
% Useful packages and their settings
%
\usepackage{multicol}
\raggedcolumns
\setlength{\columnsep}{10mm}
\usepackage{fancyvrb}
\fvset{samepage=true,gobble=8}
\usepackage{color}
\usepackage{titlesec}
\usepackage{paralist}
\usepackage{calc}
\usepackage{ifthen}
\usepackage{longtable}
\usepackage{multirow}
\usepackage{mdwlist}
\usepackage{textcomp}
\usepackage[T1]{fontenc}

%
% Let's not have parentheses around list items (for level 2 lists).
%
\renewcommand{\labelenumii}{\alph{enumii}. }

%
% name blank for quizzes and exams (assumes four TAs and seven discussion
% times)- the the TA names and the discussion times for this semester are
% hardcoded
%
\newcommand{\nameblock}{%
  {%  so arraystretch will only apply locally
  \renewcommand{\arraystretch}{1.9}%
  \begin{tabular}[t]{@{}|l@{\hspace{2mm}}p{2.9in}|@{}}%
    \hline%
    \textbf{Name (}\textsc{printed}\textbf{):}%
      & \underline{\hspace{2.9in}}%
        \rule{0mm}{8.5mm}%
      \\%
    \textbf{University ID \#:}%
      & \underline{\hspace{2.9in}}%
      \\[-2mm]%
    \multicolumn{2}{@{}|l|@{}}{%
      \textbf{Circle your TA's name:}\hspace{.2in}%
      \begin{tabular}[t]{@{}*{4}{p{.46in}}@{\hspace{-30mm}}}%
        \centering Tommy%\multicolumn{1}{p{.5375in}}{Tommy}%
          & \centering Tammy%
          & \centering Derek %\multicolumn{1}{p{.4in}}{Derek}%
          & \centering Varun %\multicolumn{1}{p{.55in}@{}}{Varun}%
      \end{tabular}%
    }%
      \\[-3mm]%
    \multicolumn{2}{@{}|l|@{}}{%
      \textbf{Circle your discussion:}%
      \begin{tabular}[t]{@{\hspace{1mm}}*{6}{@{\hspace{1.25mm}}p{.375in}}@{}}%
         \centering \small 9:00%
            & \centering \small 10:00%
            & \centering \small 11:00%
            & \centering \small 12:00%
            & \centering \small 1:00%
            & \centering \small 2:00%
      \end{tabular}%
    }%
      \\[.5mm]\hline%
  \end{tabular}%
  \vspace*{-1mm}%
  }%
}

% Answer blanks for quizzes and exams.

\newcommand{\sans}{\underline{\hspace{0.75in}}}
\newcommand{\mans}{\underline{\hspace{1in}}}
\newcommand{\ans}[1][1.25in]{\underline{\hspace{#1}}}
\newcommand{\lans}{\underline{\hspace{2.0in}}}

%
% Prints "turn over" and does a \pagebreak
%
\newcommand{\turnover}{
  \vspace{\fill}%
  \begin{center}%
    (\emph{\LARGE turn over})%
  \end{center}%
  \vspace*{-8mm}% seems to be ignored...

  \pagebreak%
}

%
% grid for writing exam question scores and total score- first parameter is
% the number of exam questions, the second is the scale factor (e.g., .5mm)
% indicating how large to make this.  Second parameter must be a length.
%
% NOTE: this really should be improved....
%
\usepackage{calc}
%
\newcounter{idx1}%
\newcounter{idx2}%
\newcounter{idx3}%
\newcommand{\scoreblank}[2]{
  %
  % notes:
  % - make the width and height of each cell parameters to the environment?
  % - SHOULD draw from the right so changing the scale factor doesn't
  %   require shifting the thing to the left...
  %
  % offset entire thing from right margin
  %
  \newcounter{@width}%
    \setcounter{idx3}{((#1 + 1) * 30) + 20}%
    \setcounter{@width}{\value{idx3}}%
    \addtocounter{@width}{40}  % should be 60????
    \begin{picture}(\value{@width},50)(0,20)%
      \setlength{\unitlength}{#2}%
      %
      % horizontal lines for full width of thing
      %
      \put(0,0){\line(1,0){\value{idx3}}}%
      \put(0,30){\line(1,0){\value{idx3}}}%
      \put(0,50){\line(1,0){\value{idx3}}}%
      %
      % draw vertical lines around each cell (except total cell)
      %
      \setcounter{idx1}{#1}%
      \addtocounter{idx1}{1}
      \multiput(0,50)(30,0){\value{idx1}}{\line(0,-1){50}}%
      %
      % write number for each cell (except total cell)
      %
      \setcounter{idx2}{1}%
      \multiput(0,30)(30,0){#1}{%
        \put(0,0){\makebox(30,20)[c]{\arabic{idx2}\stepcounter{idx2}}}%
      }%
      %
      % draw vertical line after total cell (total line is 20 wider than
      % the others)
      %
      \put(\value{idx3},0){\line(0,1){50}}%
      %
      % subtract 50 so the word "Total" is put in middle of the top part of
      % the total cell
      %
      \addtocounter{idx3}{-50}%
      \put(\value{idx3},30){\makebox(50,20)[c]{Total}}%
    \end{picture}%
}

%
% Let the student know what is scratch paper
%
\newcommand{\scratchpaper}[1][\linewidth]{{%
  \raggedright%
  \begin{minipage}[t]{#1}%
    \begin{center}%
      \Large%
      SCRATCH WORK AREA

      (this area will not be graded)%
    \end{center}%
  \end{minipage}}%
}

% parameters: # of lines, width of lines, interline spacing
\newcommand{\answerblank}[3]{
  \begin{minipage}[t]{#2}%
    \setlength{\baselineskip}{#3}%
    \setcounter{idx1}{0}%
    \vspace{1ex}%
    \whiledo{\value{idx1} < #1}{%
      \underline{\hspace{#2}}

      \addtocounter{idx1}{1}%
    }%
  \end{minipage}%
}

%
% I like point deductions given in grading directions to have a uniform
% appearance, and it can help to draw circles around point values sometimes.
%
\usepackage{pst-tree}  % for \pscirclebox
\newcommand{\pts}[2][]{\ifnum #2 = 1%
                         {\ifthenelse{\equal{#1}{}}%
                           {\ensuremath{#2}\ pt.}%
                           {\,\pscirclebox[framesep=.4ex]{\ensuremath{#2}}%
                            \,\ pt.}}\else%
                       \ifnum #2 = -1%
                         {\ifthenelse{\equal{#1}{}}%
                           {\ensuremath{#2}\ pt.}%
                           {\,\pscirclebox[framesep=.4ex]{\ensuremath{#2}}%
                            \,\ pt.}}\else%
                       \ifthenelse{\equal{#1}{}}%
                         {\ensuremath{#2}\ pts.}%
                         {\,\pscirclebox[framesep=.4ex]{\ensuremath{#2}}%
                          \,\ pts.}\fi\fi}
\newcommand{\ptsbox}[1]{[\pts{#1}]}

%
% For including material in a document which can be disabled easily, for
% example, grading criteria for quizzes and exams that can be trivially
% omitted, by just changing one word in the document, so solutions can be
% posted that do not contain the grading criteria.
%
% Use as \begin{info}{title}{width} ... \end{info}
% \showinfo enables display of all material inside info environemnts after
%           that point in the document, until \hideinfo appears
% \hideinfo suppreses display of all material inside info environemnts after
%           that point in the document, until \showinfo appears
% title is displayed as the title when the material is shown
%

\usepackage{comment}
\usepackage{ifthen}
\usepackage{verbatim}

% the default is not to show anything in an info environment
\newenvironment{info}[1]{\comment}{\endcomment}

\newcommand{\showinfo}{%
  \renewenvironment{info}[1]{\smallskip%
                               \begin{quote}%
                                 \smallskip
                                 ##1%
                                 \smallskip
                            }
                            {%
                                \end{quote}%
                                \smallskip%
                            }
}

\newcommand{\hideinfo}{%
  \renewenvironment{info}[1]{\comment}{\endcomment}
}

%
% For grammars
%

\newcommand{\midspc}{\mbox{\Large \ensuremath{\ \mid \ }}}
\newcommand{\NT}[1]{\mbox{\ensuremath{<\!\!\mathrm{#1}\!\!>}}}

\newcommand{\production}[3][\rightarrow]{\ensuremath{\mathrm{#2%
                                         \ \: \mbox{\Large \ensuremath{#1}}%
                                         \ \: #3}}}
\newenvironment{grammar}[1][1]{\(%
                                  \renewcommand{\arraystretch}{#1}%
                                  \begin{array}[t]%
                                        {@{}l@{\hspace{2mm}}l@{\hspace{2mm}}l}
                              }
                              {   \end{array}%
                                \)%
                              }
\newcommand{\union}{\cup}
\newcommand{\intersect}{\cap}
\newcommand{\element}{\in}

%
% Lots of Latex stuff for drawing automata that I wrote as an experiement,
% trying to learn new features of TeX/Latex.  Undoubtebly could be done much
% better with more knowledge about how things work.  Can also be used to
% draw graphs.
% 
%

% offset overrules offsetfrom and offsetto (offsetA and offsetB)
% add anglefrom= and angleto=

\RequirePackage{keyval}
\RequirePackage{pstricks}
\RequirePackage{pst-node}
\RequirePackage{ifthen}

\psset{unit=1mm}
\psset{arrowsize=2.25 1,arrowinset=0,nodesep=0,offset=0,doublesep=.65}%

\define@key{automatastates}{start}[true]{\gdef\start{#1}}
\define@key{automatastates}{final}[true]{\gdef\final{#1}}
\define@key{automatastates}{size}{\gdef\size{#1}}
\define@key{automatastates}{label}[]{\label={#1}}
\define@key{automatastates}{startstatedirection}[left]{\gdef\startstatedir{#1}}

\def\resetautomatastateparameters{%
  \global\newtoks\label%
  \label={}%
  \gdef\start{false}%
  \gdef\final{false}%
  \gdef\size{6}%
  \gdef\startstatedir{left}%
}%

\def\state{%
  \@ifnextchar[{\statehelperarg}{\statehelpernoarg}}

\def\statehelperarg[#1](#2,#3)#4{%
  \statehelper{#1}{#2}{#3}{#4}%
}

\def\statehelpernoarg(#1,#2)#3{%
  \statehelper{}{#1}{#2}{#3}%
}

\newcommand{\statehelper}[4]{%
  \resetautomatastateparameters%
  \setkeys{automatastates}{#1}%
   \ifthenelse{\equal{\label}{}}%
     {}%
     {\rput(#2,#3){\pscirclebox[linecolor=white,linewidth=0]{\the\label}}}%
  % this won't work now (something changed, because it used to)....
  % \cnode[doubleline=\@final](#2,#3){\size}{#4}%
  % this will, but there must be a better way....
  \ifthenelse{\equal{\final}{true}}
    {\cnode[doubleline=true](#2,#3){\size}{#4}}
    {\cnode[doubleline=false](#2,#3){\size}{#4}}
  \ifthenelse{\equal{\start}{true}}%
    {%
      \ifthenelse{\equal{\startstatedir}{left}}
        {%
          \newcount\xcoord%
          \xcoord=#2%
          \advance\xcoord-\size%
          \advance\xcoord-1%
          \pnode(\the\xcoord,#3){arrow}%
          \ncline{<-}{#4}{arrow}%
        }%
        {}%
      \ifthenelse{\equal{\startstatedir}{right}}
        {%
          \newcount\xcoord%
          \xcoord=#2%
          \advance\xcoord+\size%
          \advance\xcoord+1%
          \pnode(\the\xcoord,#3){arrow}%
          \ncline{<-}{#4}{arrow}%
        }%
        {}%
      \ifthenelse{\equal{\startstatedir}{up}}
        {%
          \newcount\ycoord%
          \ycoord=#3%
          \advance\ycoord+\size%
          \advance\ycoord+1%
          \pnode(#2,\the\ycoord){arrow}%
          \ncline{<-}{#4}{arrow}%
        }%
        {}%
      \ifthenelse{\equal{\startstatedir}{down}}
        {%
          \newcount\ycoord%
          \ycoord=#3%
          \advance\ycoord-\size%
          \advance\ycoord-1%
          \pnode(#2,\the\ycoord){arrow}%
          \ncline{<-}{#4}{arrow}%
        }%
        {}%
    }%
    {}%
}%

% only for curved transitions
\define@key{automatatransitions}{angle}[35]{\gdef\angle{#1}%
                                            \gdef\straight{false}}
\define@key{automatatransitions}{curvature}{\gdef\curvature{#1}%
                                            \gdef\straight{false}}
\define@key{automatatransitions}{labelposition}[.5]{\gdef\labelposoverride{#1}}
\define@key{automatatransitions}{labeloffset}[\pslabelsep]%
            {\gdef\labeloffset{#1}}
\define@key{automatatransitions}{offsetfrom}[0]{\gdef\offsetfrom{#1}}
\define@key{automatatransitions}{offsetto}[0]{\gdef\offsetto{#1}}
\define@key{automatatransitions}{offset}[]{\gdef\offset{#1}}
\define@key{automatatransitions}{labellocation}[above]{\gdef\labellocation{#1}}
\define@key{automatatransitions}{curved}[false]{\gdef\straight{#1}}
\define@key{automatatransitions}{loopdirection}[up]{%
                                 \gdef\selftransdirection{#1}}

\def\resetautomatatransitionparameters{%
  \gdef\angle{35}%
  \gdef\curvature{}%
  \gdef\labelposoverride{}%
  \gdef\labelposition{.5}%
  \gdef\labeloffset{\pslabelsep}%
  \gdef\offsetfrom{0}%
  \gdef\offsetto{0}%
  \gdef\offset{}%
  \gdef\labellocation{above}%
  \gdef\straight{true}%
  \gdef\selftransdirection{up}%
}%

\def\transition{%
  \@ifnextchar[{\transitionhelperarg}{\transitionhelpernoarg}}

\def\transitionhelperarg[#1](#2,#3,#4){%
  \transitionhelper{#1}{#2}{#3}{#4}
}

\def\transitionhelpernoarg(#1,#2,#3){%
  \transitionhelper{}{#1}{#2}{#3}
}

\newcommand{\transitionhelper}[4]{%
  \resetautomatatransitionparameters%
  \setkeys{automatatransitions}{#1}%
  \ifthenelse{\equal{#2}{#4}}%
    {\gdef\straight{false}}%
    {}%
  \ifthenelse{\equal{\straight}{true}}%
    {%
      % if offset is set, it overwrites offsetfrom and offsetto
      \ifthenelse{\not\equal{\offset}{}}%
        {%
          \gdef\offsetfrom{\offset}%
          \gdef\offsetto{\offset}%
        }%
        {}%
      \ncline[offsetA=\offsetfrom,offsetB=\offsetto]{->}{#2}{#4}%
      \ifthenelse{\equal{\labelposoverride}{}}%
        {\gdef\labelposition{.5}}%
        {\gdef\labelposition{\labelposoverride}}%
    }%
    {%  not straight
      \ifthenelse{\not\equal{#2}{#4}}%
        {%
          \ifthenelse{\equal{\curvature}{}}%
            {\gdef\curvature{.67}}%
            {}%
          % if offset is set, it overwrites offsetfrom and offsetto
          \ifthenelse{\not\equal{\offset}{}}%
            {%
              \gdef\offsetfrom{\offset}%
              \gdef\offsetto{\offset}%
            }%
            {}%
          \ncarc[arcangle=\angle,ncurv=\curvature,offsetA=\offsetfrom,%
                 offsetB=\offsetto]{->}{#2}{#4}%
          \ifthenelse{\equal{\labelposoverride}{}}%
            {\gdef\labelposition{.5}}%
            {\gdef\labelposition{\labelposoverride}}%
        }%
        {%  self-transition
          \newcount\anglea%
          \newcount\angleb%
          \ifthenelse{\equal{\selftransdirection}{up}%
                      \or\equal{\selftransdirection}{u}%
                      \or\equal{\selftransdirection}{north}%
                      \or\equal{\selftransdirection}{n}}%
            {%
              \global\anglea=90%
              \global\angleb=90%
              \global\advance\anglea by -25%
              \global\advance\angleb by 20%
              \gdef\labellocation{above}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.15}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          \ifthenelse{\equal{\selftransdirection}{nw}}%
            {%
              \global\anglea=135%
              \global\angleb=135%
              \global\advance\anglea by -25%
              \global\advance\angleb by 20%
              \gdef\labellocation{above}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.5}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          \ifthenelse{\equal{\selftransdirection}{right}%
                      \or\equal{\selftransdirection}{r}%
                      \or\equal{\selftransdirection}{east}%
                      \or\equal{\selftransdirection}{e}}%
            {%
              \global\anglea=0%
              \global\angleb=0%
              \global\advance\anglea by -25%
              \global\advance\angleb by 20%
              \gdef\labellocation{above}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.5}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          \ifthenelse{\equal{\selftransdirection}{ne}}%
            {%
              \global\anglea=45%
              \global\angleb=45%
              \global\advance\anglea by 25%
              \global\advance\angleb by -20%
              \gdef\labellocation{below}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.5}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          \ifthenelse{\equal{\selftransdirection}{se}}%
            {%
              \global\anglea=315%
              \global\angleb=315%
              \global\advance\anglea by -25%
              \global\advance\angleb by 20%
              \gdef\labellocation{above}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.5}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          \ifthenelse{\equal{\selftransdirection}{down}%
                      \or\equal{\selftransdirection}{d}%
                      \or\equal{\selftransdirection}{south}%
                      \or\equal{\selftransdirection}{s}}%
            {%
              \global\anglea=270%
              \global\angleb=270%
              \global\advance\anglea by 25%
              \global\advance\angleb by -20%
              \gdef\labellocation{below}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.15}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          \ifthenelse{\equal{\selftransdirection}{sw}}%
            {%
              \global\anglea=225%
              \global\angleb=225%
              \global\advance\anglea by 25%
              \global\advance\angleb by -20%
              \gdef\labellocation{below}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.5}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          \ifthenelse{\equal{\selftransdirection}{left}%
                      \or\equal{\selftransdirection}{l}%
                      \or\equal{\selftransdirection}{west}%
                      \or\equal{\selftransdirection}{w}}%
            {%
              \global\anglea=180%
              \global\angleb=180%
              \global\advance\anglea by 25%
              \global\advance\angleb by -20%
              \gdef\labellocation{below}%
              \ifthenelse{\equal{\labelposoverride}{}}%
                {\gdef\labelposition{.5}}%
                {\gdef\labelposition{\labelposoverride}}%
              \ifthenelse{\equal{\curvature}{}}%
                {\gdef\curvature{5.75}}%
                {}%
            }%
            {}%
          % if offset is set, it overwrites offsetfrom and offsetto
          \ifthenelse{\not\equal{\offset}{}}%
            {%
              \gdef\offsetfrom{\offset}%
              \gdef\offsetto{\offset}%
            }%
            {}%
          \nccurve[ncurv=\curvature,arcangle=\angle,angleA=\the\anglea,%
                   angleB=\the\angleb,offsetA=\offsetfrom,offsetB=\offsetto]%
                  {->}{#2}{#4}%
        }%
    }%
  \ifthenelse{\equal{\labellocation}{above}}%
    {%
      \ifthenelse{\not\equal{#2}{#4}}%
        {\aput[\labeloffset](\labelposition){#3}}%
        {\bput[\labeloffset](\labelposition){#3}}%
    }%
    {%
      \ifthenelse{\not\equal{#2}{#4}}%
        {\bput[\labeloffset](\labelposition){#3}}%
        {\aput[\labeloffset](\labelposition){#3}}%
    }%
}%

% \def\automaton{%
%   \@ifnextchar[{\automatonhelperi}{\automatonhelperi[]}
% }
% 
% % \newcommand{\automaton}[1][1.0]{
% %   \automatonhelper[#1]
% % }
% 
% \def\automatonhelperi[#1]#2(#3,#4){%
%   \automatonhelperii[#1](0,0)(#3,#4)
%   % \@ifnextchar({\automatonhelperii[#1](#3,#4)}%
%   %              {\automatonhelperii[#1](0,0)(#3,#4)}
% }

% \def\automaton[#1](#2,#3)(#4,#5)

\def\automaton(#1,#2)(#3,#4)
  {%
    \psset{unit=1mm}%
     \begin{pspicture}(#1,#2)(#3,#4)%
       % global definitions
       \psset{arrowsize=2.25 1,arrowinset=0,nodesep=0,offset=0,doublesep=.65}%
       \Large%
  }

\def\endautomaton{\end{pspicture}}
